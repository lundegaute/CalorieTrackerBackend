// <auto-generated />
using System;
using CalorieTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalorieTracker.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250819165041_RestartDatabase")]
    partial class RestartDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CalorieTracker.Models.FoodSummarySql", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Calories")
                        .HasColumnType("double");

                    b.Property<double?>("Carbohydrates")
                        .IsRequired()
                        .HasColumnType("double");

                    b.Property<double?>("Fat")
                        .IsRequired()
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("Protein")
                        .IsRequired()
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("CalorieTracker.Models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("MealNameId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("MealNameId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("CalorieTracker.Models.MealName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MealPlanId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MealPlanId");

                    b.HasIndex("UserId");

                    b.ToTable("MealNames");
                });

            modelBuilder.Entity("CalorieTracker.Models.MealPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("MealPlans");
                });

            modelBuilder.Entity("CalorieTracker.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CalorieTracker.Models.Meal", b =>
                {
                    b.HasOne("CalorieTracker.Models.FoodSummarySql", "Food")
                        .WithMany("Meals")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CalorieTracker.Models.MealName", "MealName")
                        .WithMany("Meals")
                        .HasForeignKey("MealNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("MealName");
                });

            modelBuilder.Entity("CalorieTracker.Models.MealName", b =>
                {
                    b.HasOne("CalorieTracker.Models.MealPlan", "MealPlan")
                        .WithMany("MealNames")
                        .HasForeignKey("MealPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalorieTracker.Models.User", "User")
                        .WithMany("MealNames")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MealPlan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CalorieTracker.Models.FoodSummarySql", b =>
                {
                    b.Navigation("Meals");
                });

            modelBuilder.Entity("CalorieTracker.Models.MealName", b =>
                {
                    b.Navigation("Meals");
                });

            modelBuilder.Entity("CalorieTracker.Models.MealPlan", b =>
                {
                    b.Navigation("MealNames");
                });

            modelBuilder.Entity("CalorieTracker.Models.User", b =>
                {
                    b.Navigation("MealNames");
                });
#pragma warning restore 612, 618
        }
    }
}
